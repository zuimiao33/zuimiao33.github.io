{"title":"正则表达式","uid":"03a1af7058cec8bb8efe418ed228e157","slug":"正则表达式","date":"2022-11-09T06:45:20.000Z","updated":"2022-11-09T07:07:05.548Z","comments":true,"path":"api/articles/正则表达式.json","keywords":null,"cover":"https://zuimiao.xyz/images/cover1.jpg","content":"<h1 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h1><p>Regular Expression, 正则表达式, ⼀种使⽤表达式的⽅式对字符串进⾏匹配的语法规则.我们抓取到的⽹⻚源代码本质上就是⼀个超⻓的字符串, 想从⾥⾯提<br>取内容.⽤正则再合适不过了.</p>\n<p>正则的优点: 速度快, 效率⾼, 准确性⾼ </p>\n<p>正则的缺点: 新⼿上⼿难度有点⼉⾼.</p>\n<p>不过只要掌握了正则编写的逻辑关系, 写出⼀个提取⻚⾯内容的正则其实并不复杂<br>正则的语法: 使⽤元字符进⾏排列组合⽤来匹配字符串 在线测试正则表达式<a href=\"https://tool.oschina.net/regex/\">https://tool.oschina.net/regex/</a></p>\n<h2 id=\"元字符-具有固定含义的特殊符号-常⽤元字符\"><a href=\"#元字符-具有固定含义的特殊符号-常⽤元字符\" class=\"headerlink\" title=\"元字符: 具有固定含义的特殊符号 常⽤元字符:\"></a>元字符: 具有固定含义的特殊符号 常⽤元字符:</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">. 匹配除换⾏符以外的任意字符, 未来在python的re模块中是⼀个坑.\n\\w 匹配字⺟或数字或下划线\n\\s 匹配任意的空⽩符\n\\d 匹配数字\n\\n 匹配⼀个换⾏符\n\\t 匹配⼀个制表符\n^ 匹配字符串的开始\n$ 匹配字符串的结尾\n\\W 匹配⾮字⺟或数字或下划线\n\\D 匹配⾮数字\n\\S 匹配⾮空⽩符\na|b 匹配字符a或字符b\n() 匹配括号内的表达式，也表示⼀个组\n[...] 匹配字符组中的字符\n[^...] 匹配除了字符组中字符的所有字符<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"量词-控制前⾯的元字符出现的次数\"><a href=\"#量词-控制前⾯的元字符出现的次数\" class=\"headerlink\" title=\"量词: 控制前⾯的元字符出现的次数\"></a>量词: 控制前⾯的元字符出现的次数</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">* 重复零次或更多次\n+ 重复⼀次或更多次\n? 重复零次或⼀次\n&#123;n&#125; 重复n次\n&#123;n,&#125; 重复n次或更多次\n&#123;n,m&#125; 重复n到m次<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"贪婪匹配和惰性匹配\"><a href=\"#贪婪匹配和惰性匹配\" class=\"headerlink\" title=\"贪婪匹配和惰性匹配\"></a>贪婪匹配和惰性匹配</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">.* 贪婪匹配, 尽可能多的去匹配结果\n.*? 惰性匹配, 尽可能少的去匹配结果 -&gt; 回溯<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"案列\"><a href=\"#案列\" class=\"headerlink\" title=\"案列\"></a>案列</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">str: 玩⼉吃鸡游戏, 晚上⼀起上游戏, ⼲嘛呢? 打游戏啊\nreg: 玩⼉.*?游戏\n此时匹配的是: 玩⼉吃鸡游戏\nreg: 玩⼉.*游戏\n此时匹配的是: 玩⼉吃鸡游戏, 晚上⼀起上游戏, ⼲嘛呢? 打游戏\nstr: &lt;div&gt;胡辣汤&lt;&#x2F;div&gt;\nreg: &lt;.*&gt;\n结果: &lt;div&gt;胡辣汤&lt;&#x2F;div&gt;\nstr: &lt;div&gt;胡辣汤&lt;&#x2F;div&gt;\nreg: &lt;.*?&gt;\n结果:\n&lt;div&gt;\n&lt;&#x2F;div&gt;\nstr: &lt;div class&#x3D;&quot;abc&quot;&gt;&lt;div&gt;胡辣汤&lt;&#x2F;div&gt;&lt;div&gt;饭团&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;\nreg: &lt;div&gt;.*?&lt;&#x2F;div&gt;\n结果:\n&lt;div&gt;胡辣汤&lt;&#x2F;div&gt;\n&lt;div&gt;饭团&lt;&#x2F;div&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","feature":true,"text":"正则表达式Regular Expression, 正则表达式, ⼀种使⽤表达式的⽅式对字符串进⾏匹配的语法规则.我们抓取到的⽹⻚源代码本质上就是⼀个超⻓的字符串, 想从⾥⾯提取内容.⽤正则再合适不过了. 正则的优点: 速度快, 效率⾼, 准确性⾼ 正则的缺点: 新⼿上⼿难度有点⼉...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":2,"path":"api/categories/Python.json"}],"tags":[{"name":"爬虫","slug":"爬虫","count":1,"path":"api/tags/爬虫.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">正则表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%83%E5%AD%97%E7%AC%A6-%E5%85%B7%E6%9C%89%E5%9B%BA%E5%AE%9A%E5%90%AB%E4%B9%89%E7%9A%84%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7-%E5%B8%B8%E2%BD%A4%E5%85%83%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">元字符: 具有固定含义的特殊符号 常⽤元字符:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%87%8F%E8%AF%8D-%E6%8E%A7%E5%88%B6%E5%89%8D%E2%BE%AF%E7%9A%84%E5%85%83%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0\"><span class=\"toc-text\">量词: 控制前⾯的元字符出现的次数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%AA%E5%A9%AA%E5%8C%B9%E9%85%8D%E5%92%8C%E6%83%B0%E6%80%A7%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">贪婪匹配和惰性匹配</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A1%88%E5%88%97\"><span class=\"toc-text\">案列</span></a></li></ol></li></ol>","author":{"name":"XXXWANG","slug":"blog-author","avatar":"https://zuimiao.xyz/images/touxiang.png","link":"/","description":"为什么不去码头整点薯条呢","socials":{"github":"https://github.com/zuimiao33","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"https://zuimiao.xyz/images/icon_bilibili.png","link":"https://space.bilibili.com/12238082?spm_id_from=333.1007.0.0"},"douyin":{"icon":"https://zuimiao.xyz/images/icon_douyin.png","link":"https://www.douyin.com/user/MS4wLjABAAAAbV8aVMRrfrdQ1u_CcLol1W4DXS5iWXaeYVWDxP2DevE"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"数据结构（C)--线性表","uid":"1c864ee8c45d128c1db0522699c2fec9","slug":"数据结构（C)----线性表的顺序表示","date":"2022-11-09T03:55:20.000Z","updated":"2022-11-09T06:21:12.111Z","comments":true,"path":"api/articles/数据结构（C)----线性表的顺序表示.json","keywords":null,"cover":"https://zuimiao.xyz/images/cover2.jpg","text":"线性表 线性表的定义线性表（List）：零个或多个数据元素的有限序列。 线性表的数据集合为{a1,a2,…,an}，假设每个元素的类型均为DataType。其中，除第一个元素a1外，每一个元素有且只有一个直接前驱元素，除了最后一个元素an外，每一个元素有且只有一个直接后继元素。数...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"C/C++","slug":"C-C","count":1,"path":"api/categories/C-C.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":1,"path":"api/tags/数据结构.json"}],"author":{"name":"XXXWANG","slug":"blog-author","avatar":"https://zuimiao.xyz/images/touxiang.png","link":"/","description":"为什么不去码头整点薯条呢","socials":{"github":"https://github.com/zuimiao33","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"https://zuimiao.xyz/images/icon_bilibili.png","link":"https://space.bilibili.com/12238082?spm_id_from=333.1007.0.0"},"douyin":{"icon":"https://zuimiao.xyz/images/icon_douyin.png","link":"https://www.douyin.com/user/MS4wLjABAAAAbV8aVMRrfrdQ1u_CcLol1W4DXS5iWXaeYVWDxP2DevE"}}}},"feature":true}}